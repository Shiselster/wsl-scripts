cat <<- "EOF" > /usr/local/bin/upgrade
#!/bin/bash

color="tput setaf 5; tput bold"
reset="tput sgr0"

if [ "$EUID" -ne 0 ]
  then eval "$color"; echo "Please run as root"; eval "$reset"
  exit
fi

eval "$color"; echo "time to clean out old apt files and upgrade. Here we go."; eval "$reset"
eval "$color"; echo "Starting the cleaning cycle."; eval "$reset"
apt clean -y
apt autoremove -y
eval "$color"; echo "All done cleaning now updating sources and upgrading your distro"; eval "$reset"
apt update
apt upgrade -y
apt dist-upgrade -y
eval "$color"; echo "the upgrade has been completed. Enjoy"; eval "$reset"
EOF

chmod +x /usr/local/bin/upgrade
upgrade

# this can now be run with "sudo upgrade" or added to your crontab via the command "sudo crontab -e"
# select your favorite editor and at the bottom of the page add this line
#* */# * * * /usr/local/bin/upgrade > /dev/null 2>&1"
# be sure to remove the first # and change the second one to a number 1-24.
# the number you pick there will result in the script running every {number you choose} hours
# personally I do every 12 hours cause I don't wanna get caught with an exploitable system
# To have this script build the cron entry for you delete the # at the start of the next 4 lines

crontab -l
echo "* */12 * * * /usr/local/bin/upgrade > /dev/null 2>&1" >> crontab_new
crontab crontab_new
rm crontab_new
